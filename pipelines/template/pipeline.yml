parameters:
  - name: PythonVersion
    type: string
    values: ['3.9','3.10','3.11','3.12','3.13']
    default: '3.11'

stages:
# ---------- Lint ----------
- stage: LinterStage
  displayName: "Lint"
  jobs:
  - job: InstallPython
    displayName: Use Python
    pool: { vmImage: 'ubuntu-latest' }
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: ${{ parameters.PythonVersion }}
        displayName: 'Use Python ${{ parameters.PythonVersion }}'

  - job: RunLinters
    displayName: Run Linters
    dependsOn: InstallPython
    pool: { vmImage: 'ubuntu-latest' }
    steps:
      - script: python -m pip install --upgrade pip && pip install flake8 mypy
        displayName: "Install flake8 & mypy"
      - bash: |
          echo "Running mypy..."
          python -m mypy . || true
        displayName: "Linter Run (mypy)"
      - bash: |
          echo "Running flake8..."
          python -m flake8 . || true
        displayName: "Linter Run (flake8)"

# ---------- Unit Tests ----------
- stage: "UnitTestingStage"
  dependsOn: LinterStage
  jobs:
  - job: InstallPython
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: ${{ parameters.PythonVersion }}
        displayName: 'Use Python ${{ parameters.PythonVersion }}'

  - job: InstallDependencies
    dependsOn: InstallPython
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django
        displayName: "Install Python Dependencies"

  - job: RunUnitTests
    dependsOn: InstallDependencies
    pool:
      vmImage: ubuntu-latest
    steps:
      - bash: |
          export PYTHONPATH="$(pwd)/ecommerce:${PYTHONPATH}"
          echo "PYTHONPATH=$PYTHONPATH"
          pytest -q --maxfail=1 --disable-warnings --tb=short
        displayName: "Execute pytest"

# ---------- Approval ----------
- stage: DeploymentApprovalStage
  displayName: "Approval"
  dependsOn: UnitTestingStage
  pool: server
  jobs:
  - job: DeploymentApprovalJob
    displayName: "Manual approval"
    steps:
      - task: ManualValidation@1
        inputs:
          instructions: 'Please approve the deployment.'
          timeoutInMinutes: 5

- stage: DeploymentStage
  displayName: "Deploy"
  dependsOn: DeploymentApprovalStage
  jobs:
  - job: InstallPython
    displayName: Use Python
    pool: { vmImage: 'ubuntu-latest' }
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: ${{ parameters.PythonVersion }}
        displayName: 'Use Python ${{ parameters.PythonVersion }}'

  - job: InstallDependencies
    displayName: Install Dependencies
    dependsOn: InstallPython
    pool: { vmImage: 'ubuntu-latest' }
    steps:
      - script: pip install -r requirements.txt
        displayName: "Install Python Dependencies"

  - job: RunDeployment
    displayName: "Run Deployment (placeholder)"
    dependsOn: InstallDependencies
    pool: { vmImage: 'ubuntu-latest' }
    steps:
      - bash: echo "Running Deployment..."
        displayName: "Run Deployments"